{"version":3,"sources":["map/components/MapChart.js","settings/index.js","map/components/table.js","map/index.js","DataMg/dataprovider/index.js","DataMg/databases/index.js","DataMg/index.js","App.js","reportWebVitals.js","index.js"],"names":["DOMParser","a","url","fetch","then","response","text","xml","kml","parseFromString","name","json","jsons","filter","e","fishery_name","replaceAll","split","indexOf","generateCircle","deg","Array","fill","map","d","i","MapChart","setTooltipContent","setRows","fisheries","setOpen","setFish","table","setOpenfish","useState","Aria","setAria","fisherie","setFisherie","typographies","setTypographies","Annots","setAnnots","fname","setFname","center","isPressed","mouseX","mouseY","scale","rotate","sphere","JSON","stringify","nm","substring","length","set","ddg","DDG","Promise","resolve","response1","res","instantAnswer","skip_disambig","err","data","datav1","AnswerType","DefinitionURL","ImageHeight","Heading","Type","Entity","RelatedTopics","Answer","Results","AbstractURL","AbstractSource","Image","Abstract","ImageWidth","Definition","AbstractText","DefinitionSource","Infobox","meta","ImageIsLogo","Redirect","getfish","console","log","map_info","togeoJSON","geos","geosg","data1","features","s","geometry","type","coordinates","data2","data3","properties","line","point","props","Alert","info","stroke","style","zIndex","fillRule","fillOpacity","strokeWidth","strokeLinecap","subject","dx","dy","connectorProps","x","textAnchor","fontSize","alignmentBaseline","description","replace","getAnot","data-tip","projection","projectionConfig","geography","onDrag","evt","geographies","geo","onMouseEnter","ABBREV","CONTINENT","FORMAL_EN","GDP_MD_EST","GDP_YEAR","ISO_A2","ISO_A3","NAME","NAME_LONG","POP_EST","POP_RANK","POP_YEAR","REGION_UN","SUBREGION","db","types","onMouseLeave","onClick","getAllFisheriesBycountry","id","default","outline","hover","pressed","rsmKey","strokeDasharray","memo","doc","window","innerHeight","innerWidth","themes","light","foreground","background","Rnd","width","Number","toFixed","height","dark","ThemeContext","React","createContext","Column","Table","HeaderCell","Cell","DataTable","rows","setFisheries","open","settings","useContext","useRef","active","setActive","wordWrap","align","padding","margin","maxWidth","display","alignItems","justifyContent","dataKey","target","rowData","rowIndex","Icon","icon","color","Instance","Fish","openfish","Drawer","show","onHide","backdrop","autoFocus","size","keyboard","Header","Title","FBname","Body","Panel","shaded","bordered","bodyFill","src","thumb","image","getimg","header","Species","Comments","document","oncontextmenu","event","undefined","preventDefault","stopPropagation","stopEvent","Map","content","setContent","Tables","place","effect","Modal","opacity","textAlign","overflow","scrollBehavior","DbList","resource","params","BookIcon","List","Datagrid","TextField","source","DateField","EditButton","basePath","DataMg","Admin","dataProvider","Resource","list","App","path","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6ad438f6.chunk.js","sourcesContent":["import React, { memo, useState } from \"react\";\n// import { geoPath, geoOrthographic } from \"d3-geo\"\nimport  { DDG } from 'node-ddg-api'\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Line,\n  Annotation,\n  Graticule,\n  Sphere  \n} from \"react-simple-maps\";\nimport { PatternLines } from \"@vx/pattern\";\nimport { Alert } from 'rsuite'\nimport { kml } from '@tmcw/togeojson'\nvar parser = new DOMParser();\nconst geoUrl = \"./world-110m.json\";\nasync function togeoJSON(url = '') {\n  // Default options are marked with *\n  const response = await fetch(url)\n    .then(function (response) {\n      return response.text();\n    })\n    .then(function (xml) {\n      return kml(new DOMParser().parseFromString(xml, \"text/xml\"))\n    });\n  return response\n}\nfunction getfish(name = '',set) {\n  // Default options are marked with *\n  //console.log(name);\n  var ddg = new DDG('ffmio');\n return new Promise((resolve)=>{\n    fetch(`https://fishbase.ropensci.org/species?limit=10&FBname=${name}&fields=image,BodyShapeI,MainCatchingMethod,Weight,AnaCat,DemersPelag,Fresh,Saltwater,Author,UsedforAquaculture,Comments,FBname,Species,Genus,Importance,PriceCateg,PriceReliability,Length,Vulnerability,Subfamily`)\n    .then(function (response1) {\n    return response1.json()\n    })\n    .then((res)=>{\n      ddg.instantAnswer(name, {skip_disambig: '0',}, function(err, response) {\n        if(!res){\n        set(false)\n        }\n        resolve({data:res,datav1:response || { AnswerType: '',\n        DefinitionURL: '',\n        ImageHeight: '',\n        Heading: '',\n        Type: '',\n        Entity: '',\n        RelatedTopics: [],\n        Answer: '',\n        Results: [],\n        AbstractURL: '',\n        AbstractSource: '',\n        Image: '',\n        Abstract: '',\n        ImageWidth: '',\n        Definition: '',\n        AbstractText: '',\n        DefinitionSource: '',\n        Infobox: '',\n        meta: null,\n        ImageIsLogo: '',\n        Redirect: '' }})\n      });\n    })\n  })\n}\nfunction proxy(url) {\n  const res = 'https://cors-anywhere.herokuapp.com/' + url;\n  if (!url) { }\n  return res;\n}\nasync function getAllFisheriesBycountry(name) {\n  // Default options are marked with *\n  const response = await fetch('./feshries.json')\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (jsons) {\n      return jsons.filter(e => e.fishery_name.replaceAll(/ /g, '').split('|').indexOf(`${name}`) !== -1)\n    });\n  return response\n}\n// getAllFisheriesBycountry('Morocco').then(res => {\n//   console.log(res);\n// })\n\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\nconst getMarker = (geos) => {\n  return geos.map((geo, index) => (\n    <Marker coordinates={[geo[0], geo[1]]} key={index}>\n      <circle r={.4} fill=\"green\" />\n    </Marker>))\n\n}\nfunction generateCircle(deg) {\n  if (!deg) return [[-180, 0], [-90, 0], [0, 0], [90, 0], [180, 0]];\n  return new Array(361).fill(1).map((d, i) => {\n    return [-180 + i, deg];\n  });\n}\nconst getlines = (geos) => {\n  console.log('geos:', geos);\n  return (\n    <Line\n      // from={[2.3522, 48.8566]}\n      // to={[-74.006, 40.7128]}\n      coordinates={geos.line}\n      stroke=\"blue\"\n      fill='blue'\n      style={{ zIndex: 'inherit' }}\n      fillRule='evenodd'\n       fillOpacity='0.8'\n      strokeWidth={0.1}\n      strokeLinecap=\"round\"\n    />\n  )\n}\nconst getAnot = (geos) => {\n  return (<Annotation\nsubject={geos.point}\ndx={-90}\ndy={-30}\nconnectorProps={{\n  stroke: \"#fff\",\n  strokeWidth: 0.2,\n  strokeLinecap: \"round\"\n}}\n>\n\n <text x=\"-8\" textAnchor=\"end\" style={{fontSize: '7px'}} alignmentBaseline=\"middle\" stroke='#fff' strokeWidth={.1} fill=\"#444\">\n  {\n  (geos.props?.name||geos.props?.description).replace('.kml','') \n  }\n</text>\n</Annotation >)\n}\n\nconst MapChart = ({ setTooltipContent, setRows, fisheries, setOpen, table, setFish, setOpenfish }) => {\n  const [Aria, setAria] = useState()\n  const [fisherie, setFisherie] = useState()\n  const [typographies, setTypographies] = useState()\n  const [Annots, setAnnots] = useState()\n  const [fname , setFname] = useState()\n\n  const [sphere,setSphere] = useState({\n    center:[0,0],\n    isPressed:false,\n    mouseX:null,\n    mouseY:null,\n    scale: 400 , \n    rotate:[0,0,0],\n    center:[0,0],\n  })\n  const handleMouseDown=({ pageX, pageY })=>{\n    setSphere({...sphere,\n      isPressed: true,\n      mouseX: pageX,\n      mouseY: pageY,\n    })\n  }\n  const handleMouseMove=({ pageX, pageY })=>{\n    if (!sphere.isPressed) return\n    const differenceX = sphere.mouseX - pageX\n    const differenceY = sphere.mouseY - pageY\n    setSphere({...sphere,\n      rotate: [\n        sphere.rotate[0] - differenceX / 2,\n        sphere.rotate[1] + differenceY / 2,\n        0,\n      ],\n      mouseX: pageX,\n      mouseY: pageY,\n    })\n  }\n  // const projection = ()=>{\n  //   return geoOrthographic()\n  //     .translate([ 800 / 2, 800 / 2 ])\n  //     .rotate(sphere.rotate)\n  //     .clipAngle(90)\n  //     .scale(200)\n  // }\n  const handleMouseUp=({ pageX, pageY })=>{\n    setSphere({...sphere,\n      isPressed: false,\n    })\n  }\n  // const [marker,setMarker] = useState()\n  // useEffect(()=>{\n  // },[fisherie])\n\n  const coordinates = (geos) => {\n    // console.log(geos);\n    const data1 = geos.features.filter(s => s.geometry.type === \"Polygon\")[0]?.geometry.coordinates[0]\n    const data2 = geos.features.filter(s => s.geometry.type === \"Point\")[0]?.geometry.coordinates\n    const data3 = geos.features.filter(s => s.geometry.type === \"Point\")[0]?.properties\n    // console.log(data3);\n    if (geos.features) {\n      return { line: data1, point: [data2[0], data2[1]], props: data3 }\n    } else {\n      Alert.info('прости! никаких графических данных для этого промысла!')\n      return []\n    }\n  }\n const asynceds = async function(a,b){\n  return await a(b)\n } \n  if (JSON.stringify(fisheries) !== fisherie) {\n    setFisherie(JSON.stringify(fisheries))\n    let nm = fisheries.fishery_name.split(',')[0]\n    let name = nm.substring(0, nm.length - 1)\n    \n    if(name !== fname){\n      setFname(name)\n      getfish(name,setOpenfish).then((res)=>{\n        console.log(res);\n        setFish(res)\n      })\n      // setFish(getfish(name))\n    console.log(name);\n  \n      if (fisheries.map_info) {\n        togeoJSON(proxy(fisheries.map_info)).then(res => {\n          // setTypographies(getMarker(res.features[1].geometry.coordinates[0]));\n          const geosg = coordinates(res)\n          setTypographies(getlines(geosg));\n          setAnnots(getAnot(geosg))\n          //console.log(getMarker(res.features[1].geometry.coordinates[0]));\n        })\n      } else {\n        Alert.info('прости! никаких графических данных для этого промысла!')\n  \n      } \n    }\n   \n\n  }\n  return (\n    <>\n       <ComposableMap data-tip=\"\" projection=\"geoEqualEarth\" projectionConfig={sphere}\n        > \n        <ZoomableGroup \n        center={sphere.center} \n        //  translateExtent={[[Infinity, Infinity], [Infinity, Infinity]]}\n        //  onMouseDown={handleMouseDown}\n        //  onMouseMove={handleMouseMove}\n        //  onMouseUp={handleMouseUp}  \n        //  onMouseLeave={handleMouseUp} \n        >\n        <Graticule stroke=\"#DDD\" strokeWidth={0.3} />\n    \n          {typographies}\n        \n          <Geographies geography={geoUrl} \n          onDrag={(evt)=>{console.log(evt);}}\n       \n          >\n\n            {({ geographies }) => {\n              return geographies.map(geo => (\n                <Geography\n               \n                  key={geo.rsmKey}\n                  geography={geo}\n                  \n                  onMouseEnter={() => {\n                    // console.log(geo.properties);\n                    const { ABBREV,\n                      CONTINENT,\n                      FORMAL_EN,\n                      GDP_MD_EST,\n                      GDP_YEAR,\n                      ISO_A2,\n                      ISO_A3,\n                      NAME,\n                      NAME_LONG,\n                      POP_EST,\n                      POP_RANK,\n                      POP_YEAR,\n                      REGION_UN,\n                      SUBREGION, } = geo.properties;\n                    setTooltipContent({db:{\n                      ABBREV: ABBREV,\n                      CONTINENT: CONTINENT,\n                      FORMAL_EN: FORMAL_EN,\n                      GDP_MD_EST: GDP_MD_EST,\n                      GDP_YEAR: GDP_YEAR,\n                      ISO_A2: ISO_A2,\n                      ISO_A3: ISO_A3,\n                      NAME: NAME,\n                      NAME_LONG: NAME_LONG,\n                      POP_EST: POP_EST,\n                      POP_RANK: POP_RANK,\n                      POP_YEAR: POP_YEAR,\n                      REGION_UN: REGION_UN,\n                      SUBREGION: SUBREGION},\n                      types:'countries'\n                    })\n                  }\n                  }\n                  onMouseLeave={() => {\n                    setTooltipContent({db:null,types:'countries'});\n                  }}\n                  onClick={\n                    () => {\n                      const { NAME, POP_EST } = geo.properties;\n                      getAllFisheriesBycountry(NAME).then(res => {\n                        setTooltipContent({db:null,types:'fishries'});\n                        var i = 0;\n                        if (Aria === NAME) {\n                          setRows([])\n                        }\n                        setAria(NAME)\n                        setOpen(true)\n                        setRows(res.map(e => e = { id: i++, ...e }));\n                      })\n                    }\n                  }\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#444\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n\n              ))\n            }\n            }\n\n\n          </Geographies>\n          <Line coordinates={generateCircle(0)} stroke=\"#F53\" strokeWidth={0.3} />\n      <Line\n        coordinates={generateCircle(23)}\n        stroke=\"#776865\"\n        strokeWidth={0.3}\n        strokeDasharray={[5, 5]}\n      />\n      <Line\n        coordinates={generateCircle(-24)}\n        stroke=\"#776865\"\n        strokeWidth={0.3}\n        strokeDasharray={[5, 5]}\n      />\n          {Annots}\n        </ZoomableGroup>\n       </ComposableMap>\n    </>\n  );\n};\n\nexport default memo(MapChart);\n","import React from 'react'\nconst doc = {height:window.innerHeight,width:window.innerWidth}\n//console.info('doc:',doc);\n\nconst themes = {\n    light: {\n      foreground: \"#000000\",\n      background: \"#eeeeee\",\n      Rnd:{\n        width:Number((doc.width / 3.5).toFixed()),\n        height:doc.height - 40\n    }\n    },\n    dark: {\n      foreground: \"#ffffff\",\n      background: \"#222222\"\n    },\n    \n  };\n  \nconst ThemeContext = React.createContext(themes.light);\n export  {\n    ThemeContext,\n    themes\n}\n//   function App() {\n//     return (\n//       <ThemeContext.Provider value={themes.dark}>\n//         <Toolbar />\n//       </ThemeContext.Provider>\n//     );\n//   }\n  \n//   function Toolbar(props) {\n//     return (\n//       <div>\n//         <ThemedButton />\n//       </div>\n//     );\n//   }\n  \n//   function ThemedButton() {\n//     const theme = useContext(ThemeContext);\n//     return (\n//       <button style={{ background: theme.background, color: theme.foreground }}>\n//         I am styled by theme context!\n//       </button>\n//     );\n//   }","import React,{useState,useRef,useContext,memo} from 'react';\nimport { Table, Toggle,Icon } from 'rsuite';\n// import { Rnd } from 'react-rnd';\n// import { IconButton }  from '@material-ui/core'\n//import {AddCircle,RemoveCircle} from '@material-ui/icons'\nimport { ThemeContext } from '../../settings'\nconst { Column, HeaderCell, Cell } = Table;\n\nconst ImageCell = ({ rowData, dataKey, ...rest }) => (\n  <Cell {...rest}>\n    <img src={rowData[dataKey]} width=\"50\" />\n  </Cell>\n);\n\n// const initialState = {icon: <AddCircle style={{position:'relative'}}/>,status:false};\n\n// function reducer(switcher, action) {\n//   switch (action.type) {\n//     case 'switch':\n//       return {icon:switcher.status?<AddCircle style={{position:'relative'}}/>:<RemoveCircle style={{position:'relative'}}/>,status:!switcher.status};\n//     default:\n//       throw new Error();\n//   }\n// }\n// const Transition = forwardRef(function Transition(props, ref) {\n//   return <Slide direction=\"down\" ref={ref} {...props} mountOnEnter unmountOnExit/>;\n// });\nconst DataTable = ({rows,setFisheries,open,setOpen,setOpenfish}) => {\n  \n  const settings =  useContext(ThemeContext) \n // console.log(rows);\n const table = useRef(null)\n const [drog,setDrag] = useState(true)\n\nconst [active,setActive] = useState()\nconst handleClose = () => {\n  setOpen(false);\n};\n//  const [switcher, dispatch] = useReducer(reducer,initialState)\n\n  return(\n  //  <Rnd \n  //  dragAxis={'x'}\n  //  dragGrid={[10,20]}\n  //  dragHandleClassName='rs-table-row-header'\n  //  style={{margin:'10px 0px 0px 0px'}}\n  //   default={{...settings,x:0,y:0}}\n  //        >\n  \n  <Table  data={rows.map(e=>e={...e,fishery_name:e.fishery_name.replaceAll('|',',')})} wordWrap\n   style={{fontSize:'.6em'}}\n   height={settings.Rnd.height}\n   width={settings.Rnd.width}\n  >\n    <Column  align={'center'} \n         style={{padding:'unset',margin:'unset',maxWidth:'100%'  ,display: 'flex',\n         alignItems: 'center',\n         justifyContent: 'center'}} >\n      <HeaderCell>код(fao.org)</HeaderCell>\n      <Cell dataKey=\"fishery_id\" onClick={(evt)=>{\n        console.log(evt.target);\n      }} />\n    </Column>\n\n    <Column  align={'center'} \n     style={{padding:'unset',margin:'unset',maxWidth:'100%'  ,display: 'flex',\n     alignItems: 'center',\n     justifyContent: 'center'}}\n    >\n      <HeaderCell>промысла</HeaderCell>\n      <Cell dataKey=\"fishery_name\"   />\n    </Column>\n\n    <Column align={'center'} \n         style={{padding:'unset',margin:'unset',maxWidth:'100%'  ,display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'}}>\n      <HeaderCell>запас</HeaderCell>\n      <Cell dataKey='exploiting_stocks' />\n    </Column>\n\n     <Column align={'center'} \n         style={{padding:'unset',margin:'unset' ,display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'}}>\n      <HeaderCell>maps</HeaderCell>\n      <Cell dataKey=\"map_info\"\n      >\n           {\n           (rowData, rowIndex) => \n            (  \n             // console.log(rowData);\n          <Icon icon=\"close\" style={{color:'green'}} id={'btn'+rowIndex} onClick={()=>{\n              if(rowIndex !== active){\n                setFisheries(rowData)\n                setActive(rowIndex)\n                setOpen(false)\n                setOpenfish(true)\n              }else{\n                setFisheries(null)\n              } \n            }} />\n              )\n          \n          }\n      \n      </Cell>\n    </Column>\n    \n  </Table>\n\n\n  )\n};\nexport default memo(DataTable);","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport MapChart from \"./components/MapChart\";\nimport DataTable from './components/table'\nimport {\n    Link,\n    useRouteMatch,\n} from \"react-router-dom\";\nimport { Modal, Panel, Drawer } from 'rsuite'\nconst Instance = ({ Fish, openfish, setOpenfish }) => {\n    const getimg = ()=>{\n        var thumb = 'https://via.placeholder.com/480x240/?text=no%20image'\n        if(Fish.data.data){\n           if(Fish.data.data[0].image){\n               return Fish.data.data[0].image\n           } else {\n               if(Fish.datav1){\n                 return Fish.datav1.Image\n               } else {\n                   return thumb\n               }\n           }\n        } else {\n            if(Fish.datav1){\n              return Fish.datav1.Image\n            } else {\n                return thumb\n            }\n        }\n    }\n    return (\n    <Drawer show={openfish} onHide={() => setOpenfish(false)} backdrop={false}\n    autoFocus={false}\n    size={'xs'} keyboard={true}\n    >\n        <Drawer.Header>\n    <Drawer.Title>{ Fish.data.data ? Fish.data.data[0].FBname  :Fish.datav1?.Heading }</Drawer.Title>\n      </Drawer.Header>\n        <Drawer.Body>\n      <Panel  shaded bordered bodyFill style={{ display: 'flex',\n         margin:'0px 0px',\n      width: '100%',height:'100%' }}>\n        <img src={ getimg() }  height=\"240\" style={{width:'100%'}} />\n        <Panel header={Fish.data.data ? Fish.data.data[0].Species ? Fish.data.data[0].Species : 'none' : Fish.datav1?.Heading}>\n            <p>\n                <small>{Fish.data.data ? Fish.data.data[0].Comments : Fish.datav1.Abstract}</small>\n            </p>\n        </Panel>\n    </Panel> \n</Drawer.Body>\n    </Drawer>\n    )\n};\n\nfunction Map(props) {\n    const [content, setContent] = useState({});\n    const [rows, setRows] = useState([]);\n    const [fisheries, setFisheries] = useState();\n    const [open, setOpen] = useState(false);\n    const [openfish, setOpenfish] = useState(false);\n    const [Fish, setFish] = useState({data:{data:[{}],datav1:{}}})\n    const Tables = () => (\n        <DataTable rows={rows} setFisheries={setFisheries} setOpen={setOpen} setOpenfish={setOpenfish} open={open} />\n    )\n\n\n    return (\n        <div>\n            <MapChart setFish={setFish} setTooltipContent={setContent} table={Tables} setRows={setRows} setOpenfish={setOpenfish} setOpen={setOpen} fisheries={fisheries} />\n            {!content.db || <ReactTooltip place=\"bottom\" type=\"light\" effect=\"float\" style={{\n                display: 'inline', padding: 'none', alignItems: 'center'\n                , justifyContent: 'left'\n            }}>\n                <ul>\n                    <li><kbd>CONTINENT:</kbd>{content.db.CONTINENT}</li>\n                    <li><kbd>FORMAL_EN:</kbd>{content.db.FORMAL_EN}</li>\n                    <li><kbd> GDP_MD_EST:</kbd>{content.db.GDP_MD_EST}</li>\n                    <li><kbd>GDP_YEAR:</kbd>{content.db.GDP_YEAR}</li>\n                    <li><kbd>ISO_A2:</kbd>{content.db.ISO_A2}</li>\n                    <li><kbd>ISO_A3:</kbd>{content.db.ISO_A3}</li>\n                    <li><kbd>NAME:</kbd>{content.db.NAME}</li>\n                    <li><kbd>NAME_LONG:</kbd>{content.db.NAME_LONG}</li>\n                    <li><kbd>POP_EST:</kbd>{content.db.POP_EST}</li>\n                    <li><kbd>POP_RANK:</kbd>{content.db.POP_RANK}</li>\n                    <li><kbd>POP_YEAR:</kbd>{content.db.POP_YEAR}</li>\n                    <li><kbd>REGION_UN:</kbd>{content.db.REGION_UN}</li>\n                    <li> <kbd>SUBREGION:</kbd>{content.db.SUBREGION}</li>\n                </ul>\n            </ReactTooltip>\n            }\n            <Modal show={open} backdrop={false} onHide={() => setOpen(false)} style={{ opacity: 0.8, display: 'flex', justifyContent: 'space-around', alignItems: 'center' }}>\n                <Modal.Header>\n                    <Modal.Title style={{ textAlign: 'center' }}>ПРОМЫСИЛ</Modal.Title>\n                </Modal.Header>\n                <Modal.Body style={{ overflow: 'hidden', scrollBehavior: 'unset' }}>\n                    <Tables />\n                </Modal.Body>\n                {/* <Modal.Footer >\n                    <Grid fluid style={{ paddingTop: '1em' }}>\n                        <Row className=\"show-grid\">\n                            <Col xs={6} xsPull={1}>\n                                <Button onClick={() => setOpen(false)} color='green' >\n                                    покажи\n                        </Button>   \n                            </Col>\n                            <Col xs={6} xsPush={12}>\n                                <Button onClick={() => appearance=\"subtle\" >\n                                    Отмена\n                        </Button>\n                            </Col>\n                        </Row>\n                    </Grid>\n                </Modal.Footer> */}\n            </Modal>\n            <Instance Fish={Fish} openfish={openfish} setOpenfish={setOpenfish} />\n\n        </div>\n    );\n}\n\ndocument.oncontextmenu = function (e) {\n    //  var evt = new Object({keyCode:93});\n    stopEvent(e);\n}\nfunction stopEvent(event) {\n    if (event.preventDefault != undefined)\n        event.preventDefault();\n    if (event.stopPropagation != undefined)\n        event.stopPropagation();\n}\nexport default Map;","export default {\n    DbList:    (resource, params) => Promise,\n}\n","\n// in databases.js\nimport * as React from \"react\";\nimport { List, Datagrid, Edit, Create, SimpleForm, DateField, TextField, EditButton, TextInput, DateInput } from 'react-admin';\nimport BookIcon from '@material-ui/icons/Book';\nexport const PostIcon = BookIcon;\n\nexport const DbList = (props) => (\n    <List {...props}>\n        <Datagrid>\n            <TextField source=\"id\" />\n            <TextField source=\"title\" />\n            <DateField source=\"published_at\" />\n            <TextField source=\"average_note\" />\n            <TextField source=\"views\" />\n            <EditButton basePath=\"/posts\" />\n        </Datagrid>\n    </List>\n);\n\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const PostEdit = (props) => (\n    <Edit title={<PostTitle />} {...props}>\n        <SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"title\" />\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\n            <TextInput multiline source=\"body\" />\n            <DateInput label=\"Publication date\" source=\"published_at\" />\n            <TextInput source=\"average_note\" />\n            <TextInput disabled label=\"Nb views\" source=\"views\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const PostCreate = (props) => (\n    <Create title=\"Create a Post\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"title\" />\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\n            <TextInput multiline source=\"body\" />\n            <TextInput label=\"Publication date\" source=\"published_at\" />\n            <TextInput source=\"average_note\" />\n        </SimpleForm>\n    </Create>\n);","import { Admin, Resource } from 'react-admin';\nimport dataProvider from './dataprovider';\nimport { DbList } from './databases';\nimport React from 'react';\n// import simpleRestProvider from './ra-strapi-rest';\n\n\n// const dataProvider = simpleRestProvider('http://localhost:1337');\n\nconst DataMg = () => (\n    <Admin dataProvider={dataProvider}>\n        <Resource name=\"contries\" list={DbList} />\n    </Admin>\n);\n\nexport default DataMg;","// import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport Map from \"./map\"\nimport DataMg from \"./DataMg\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  // Link,\n  // useRouteMatch,\n  // useParams\n} from \"react-router-dom\";\nimport {ThemeContext,themes} from './settings'\n\nfunction App() {\n  return (\n    <>\n    <Router>\n    <Switch>\n      {/* <Route path=\"/about\">\n        <About />\n      </Route> */}\n      <Route path=\"/datamg\">\n        <DataMg />\n      </Route>\n      <Route path=\"/\">\n      <ThemeContext.Provider value={themes.light}>\n        <Map/>\n       \n        </ThemeContext.Provider>\n      </Route>\n    </Switch>\n   </Router>\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}