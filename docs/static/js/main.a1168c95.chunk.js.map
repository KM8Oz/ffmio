{"version":3,"sources":["logo.svg","map/components/MapChart.js","settings/index.js","map/components/table.js","map/index.js","DataMg/dataprovider/index.js","DataMg/databases/index.js","DataMg/index.js","App.js","reportWebVitals.js","index.js"],"names":["DOMParser","a","url","fetch","then","response","text","xml","kml","parseFromString","name","json","jsons","filter","e","fishery_name","replaceAll","split","indexOf","MapChart","setTooltipContent","setRows","fisheries","setOpen","useState","Aria","setAria","fisherie","setFisherie","typographies","setTypographies","Annots","setAnnots","opensnak","setOpensnak","setFish","JSON","stringify","nm","getfish","substring","length","map_info","togeoJSON","res","geos","geosg","data1","features","s","geometry","type","coordinates","data2","data3","properties","line","point","props","console","log","stroke","fill","style","zIndex","fillRule","fillOpacity","strokeWidth","strokeLinecap","subject","dx","dy","connectorProps","x","textAnchor","fontSize","alignmentBaseline","description","replace","getAnot","data-tip","projectionConfig","scale","geography","geographies","map","geo","onMouseEnter","ABBREV","CONTINENT","FORMAL_EN","GDP_MD_EST","GDP_YEAR","ISO_A2","ISO_A3","NAME","NAME_LONG","POP_EST","POP_RANK","POP_YEAR","REGION_UN","SUBREGION","onMouseLeave","onClick","getAllFisheriesBycountry","i","id","default","outline","hover","pressed","rsmKey","Snackbar","open","color","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","event","reason","message","memo","doc","window","innerHeight","innerWidth","themes","light","foreground","background","Rnd","width","Number","toFixed","height","dark","ThemeContext","React","createContext","initialState","icon","AddCircle","position","status","reducer","switcher","action","RemoveCircle","Error","Transition","forwardRef","ref","Slide","direction","mountOnEnter","unmountOnExit","DataTable","rows","setFisheries","settings","useContext","table","useRef","useReducer","dispatch","Dialog","fullScreen","TransitionComponent","data","wordWrap","align","padding","margin","maxWidth","display","alignItems","justifyContent","dataKey","evt","target","rowData","rowIndex","IconButton","aria-label","Map","content","setContent","place","effect","document","oncontextmenu","undefined","preventDefault","stopPropagation","stopEvent","DbList","resource","params","Promise","BookIcon","List","Datagrid","TextField","source","DateField","EditButton","basePath","DataMg","Admin","dataProvider","Resource","list","App","path","Provider","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a1168c95.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { memo, useState } from \"react\";\nimport {\n  ZoomableGroup,\n  ComposableMap,\n  Geographies,\n  Geography,\n  Marker,\n  Line,\n  Annotation\n} from \"react-simple-maps\";\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n//import fs from 'fs';\n// import {DOMParser}from 'xmldom';\nimport { kml } from '@tmcw/togeojson'\nvar parser = new DOMParser();\n// function Alert(props) {\n//   return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n// }\nconst geoUrl = \"./world-110m.json\";\nasync function togeoJSON(url = '') {\n  // Default options are marked with *\n  const response = await fetch(url)\n    .then(function (response) {\n      return response.text();\n    })\n    .then(function (xml) {\n      return kml(new DOMParser().parseFromString(xml, \"text/xml\"))\n    });\n  //  return new DOMParser().parseFromString(response, 'text/xml') // parses JSON response into native JavaScript objects\n  return response\n}\nasync function getfish(name = '') {\n  // Default options are marked with *\n  const response = await fetch(`https://fishbase.ropensci.org/species?limit=10&FBname=${name}&fields=image,BodyShapeI,MainCatchingMethod,Weight,AnaCat,DemersPelag,Fresh,Saltwater,Author,UsedforAquaculture,Comments,FBname,Species,Genus,Importance,PriceCateg,PriceReliability,Length,Vulnerability,Subfamily`)\n    .then(function (response) {\n      return response.json();\n    })\n\n  //  return new DOMParser().parseFromString(response, 'text/xml') // parses JSON response into native JavaScript objects\n  return response\n}\nfunction proxy(url) {\n  const res = 'https://cors-anywhere.herokuapp.com/' + url;\n  if (!url) { }\n  return res;\n}\nasync function getAllFisheriesBycountry(name) {\n  // Default options are marked with *\n  const response = await fetch('./feshries.json')\n    .then(function (response) {\n      return response.json();\n    })\n    .then(function (jsons) {\n      return jsons.filter(e => e.fishery_name.replaceAll(/ /g, '').split('|').indexOf(`${name}`) !== -1)\n    });\n  //  return new DOMParser().parseFromString(response, 'text/xml') // parses JSON response into native JavaScript objects\n  return response\n}\n// getAllFisheriesBycountry('Morocco').then(res => {\n//   console.log(res);\n// })\n\n\nconst rounded = num => {\n  if (num > 1000000000) {\n    return Math.round(num / 100000000) / 10 + \"Bn\";\n  } else if (num > 1000000) {\n    return Math.round(num / 100000) / 10 + \"M\";\n  } else {\n    return Math.round(num / 100) / 10 + \"K\";\n  }\n};\nconst getMarker = (geos) => {\n  return geos.map((geo, index) => (\n    <Marker coordinates={[geo[0], geo[1]]} key={index}>\n      <circle r={.4} fill=\"green\" />\n    </Marker>))\n\n}\nconst getlines = (geos) => {\n  console.log('geos:', geos);\n  return (\n    <Line\n      // from={[2.3522, 48.8566]}\n      // to={[-74.006, 40.7128]}\n      coordinates={geos.line}\n      stroke=\"blue\"\n      fill='blue'\n      // children={}\n      style={{ zIndex: 'inherit' }}\n      fillRule='evenodd'\n      fillOpacity='0.3'\n      strokeWidth={0.1}\n      strokeLinecap=\"round\"\n    />\n  )\n}\nconst getAnot = (geos) => {\n  return (<Annotation\nsubject={geos.point}\ndx={-90}\ndy={-30}\nconnectorProps={{\n  stroke: \"#444\",\n  strokeWidth: 0.2,\n  strokeLinecap: \"round\"\n}}\n>\n\n <text x=\"-8\" textAnchor=\"end\" style={{fontSize: '6px'}} alignmentBaseline=\"middle\" fill=\"#444\">\n  {\n  (geos.props?.name||geos.props?.description).replace('.kml','') \n  }\n</text>\n</Annotation >)\n}\nconst MapChart = ({ setTooltipContent, setRows, fisheries, setOpen }) => {\n  const [Aria, setAria] = useState()\n  const [fisherie, setFisherie] = useState()\n  const [typographies, setTypographies] = useState()\n  const [Annots, setAnnots] = useState()\n  const [opensnak, setOpensnak] = useState(false);\n  const [Fish, setFish] = useState()\n  // const [marker,setMarker] = useState()\n  // useEffect(()=>{\n  // },[fisherie])\n  const coordinates = (geos) => {\n    // console.log(geos);\n    const data1 = geos.features.filter(s => s.geometry.type === \"Polygon\")[0]?.geometry.coordinates[0]\n    const data2 = geos.features.filter(s => s.geometry.type === \"Point\")[0]?.geometry.coordinates\n    const data3 = geos.features.filter(s => s.geometry.type === \"Point\")[0]?.properties\n    // console.log(data3);\n    if (geos.features) {\n      return { line: data1, point: [data2[0], data2[1]], props: data3 }\n    } else {\n      setOpensnak(true)\n      return []\n    }\n  }\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpensnak(false);\n  };\n  if (JSON.stringify(fisheries) !== JSON.stringify(fisherie)) {\n    setFisherie(fisheries)\n    let nm = fisheries.fishery_name.split(',')[0]\n    setFish(getfish(nm.substring(0, nm.length - 1)))\n    // console.log(getfish(fisheries.fishery_name.replaceAll(' ','').split(',')[0]));\n\n    if (fisheries.map_info) {\n      togeoJSON(proxy(fisheries.map_info)).then(res => {\n        // setTypographies(getMarker(res.features[1].geometry.coordinates[0]));\n        const geosg = coordinates(res)\n        setTypographies(getlines(geosg));\n        setAnnots(getAnot(geosg))\n        //console.log(getMarker(res.features[1].geometry.coordinates[0]));\n      })\n    } else {\n      setOpensnak(true)\n    }\n\n  }\n  return (\n    <>\n      <ComposableMap data-tip=\"\" projectionConfig={{ scale: 200 }}>\n        <ZoomableGroup>\n          <Geographies geography={geoUrl}>\n            {({ geographies }) => {\n              return geographies.map(geo => (\n                <Geography\n                  key={geo.rsmKey}\n                  geography={geo}\n                  onMouseEnter={() => {\n                    // console.log(geo.properties);\n                    const { ABBREV,\n                      CONTINENT,\n                      FORMAL_EN,\n                      GDP_MD_EST,\n                      GDP_YEAR,\n                      ISO_A2,\n                      ISO_A3,\n                      NAME,\n                      NAME_LONG,\n                      POP_EST,\n                      POP_RANK,\n                      POP_YEAR,\n                      REGION_UN,\n                      SUBREGION, } = geo.properties;\n                    setTooltipContent({\n                      ABBREV: ABBREV,\n                      CONTINENT: CONTINENT,\n                      FORMAL_EN: FORMAL_EN,\n                      GDP_MD_EST: GDP_MD_EST,\n                      GDP_YEAR: GDP_YEAR,\n                      ISO_A2: ISO_A2,\n                      ISO_A3: ISO_A3,\n                      NAME: NAME,\n                      NAME_LONG: NAME_LONG,\n                      POP_EST: POP_EST,\n                      POP_RANK: POP_RANK,\n                      POP_YEAR: POP_YEAR,\n                      REGION_UN: REGION_UN,\n                      SUBREGION: SUBREGION\n                    })\n                  }\n                  }\n                  onMouseLeave={() => {\n                    setTooltipContent(\"\");\n                  }}\n                  onClick={\n                    () => {\n                      const { NAME, POP_EST } = geo.properties;\n                      getAllFisheriesBycountry(NAME).then(res => {\n                        var i = 0;\n                        if (Aria === NAME) {\n                          setRows([])\n                        }\n                        setAria(NAME)\n                        setOpen(true)\n                        setRows(res.map(e => e = { id: i++, ...e }));\n                      })\n                    }\n                  }\n                  style={{\n                    default: {\n                      fill: \"#D6D6DA\",\n                      outline: \"none\"\n                    },\n                    hover: {\n                      fill: \"#F53\",\n                      outline: \"none\"\n                    },\n                    pressed: {\n                      fill: \"#444\",\n                      outline: \"none\"\n                    }\n                  }}\n                />\n\n              ))\n            }\n            }\n\n\n          </Geographies>\n          {typographies}\n          {Annots}\n        </ZoomableGroup>\n      </ComposableMap>\n      <Snackbar open={opensnak} color={'green'} anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }} autoHideDuration={6000} onClose={handleClose} message='прости! никаких графических данных для этого промысла!'>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default memo(MapChart);","import React from 'react'\nconst doc = {height:window.innerHeight,width:window.innerWidth}\n//console.info('doc:',doc);\n\nconst themes = {\n    light: {\n      foreground: \"#000000\",\n      background: \"#eeeeee\",\n      Rnd:{\n        width:Number((doc.width / 3.5).toFixed()),\n        height:doc.height - 40\n    }\n    },\n    dark: {\n      foreground: \"#ffffff\",\n      background: \"#222222\"\n    },\n    \n  };\n  \nconst ThemeContext = React.createContext(themes.light);\n export  {\n    ThemeContext,\n    themes\n}\n//   function App() {\n//     return (\n//       <ThemeContext.Provider value={themes.dark}>\n//         <Toolbar />\n//       </ThemeContext.Provider>\n//     );\n//   }\n  \n//   function Toolbar(props) {\n//     return (\n//       <div>\n//         <ThemedButton />\n//       </div>\n//     );\n//   }\n  \n//   function ThemedButton() {\n//     const theme = useContext(ThemeContext);\n//     return (\n//       <button style={{ background: theme.background, color: theme.foreground }}>\n//         I am styled by theme context!\n//       </button>\n//     );\n//   }","import React,{useState,useRef,useReducer,useContext,forwardRef} from 'react';\nimport { Table, Column, HeaderCell, Cell } from 'rsuite-table';\nimport { Rnd } from 'react-rnd';\nimport { IconButton }  from '@material-ui/core'\nimport {AddCircle,RemoveCircle} from '@material-ui/icons'\nimport { ThemeContext } from '../../settings'\nimport Slide from '@material-ui/core/Slide';\nimport Dialog from '@material-ui/core/Dialog';\n// import 'rsuite-table/dist/css/rsuite-table.css'\n\n\n\nconst ImageCell = ({ rowData, dataKey, ...rest }) => (\n  <Cell {...rest}>\n    <img src={rowData[dataKey]} width=\"50\" />\n  </Cell>\n);\n\nconst initialState = {icon: <AddCircle style={{position:'relative'}}/>,status:false};\n\nfunction reducer(switcher, action) {\n  switch (action.type) {\n    case 'switch':\n      return {icon:switcher.status?<AddCircle style={{position:'relative'}}/>:<RemoveCircle style={{position:'relative'}}/>,status:!switcher.status};\n    default:\n      throw new Error();\n  }\n}\nconst Transition = forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} mountOnEnter unmountOnExit/>;\n});\nconst DataTable = ({rows,setFisheries,open,setOpen}) => {\n  const settings =  useContext(ThemeContext) \n // console.log(rows);\n const table = useRef(null)\n\n const [drog,setDrag] = useState(true)\n//  const handleClickOpen = () => {\n//   setOpen(true);\n// };\n\nconst handleClose = () => {\n  setOpen(false);\n};\n const [switcher, dispatch] = useReducer(reducer,initialState)\n\n  return(\n  //  <Rnd \n  //  dragAxis={'x'}\n  //  dragGrid={[10,20]}\n  //  dragHandleClassName='rs-table-row-header'\n  //  style={{margin:'10px 0px 0px 0px'}}\n  //   default={{...settings,x:0,y:0}}\n  //        >\n  <Dialog fullScreen open={open}  ref={table} onClose={handleClose} TransitionComponent={Transition}\n  >\n  <Table  data={rows.map(e=>e={...e,fishery_name:e.fishery_name.replaceAll('|',',')})} wordWrap\n   style={{fontSize:'.6em'}}\n   height={settings.Rnd.height}\n   width={settings.Rnd.width}\n  >\n    <Column  align={'center'} \n         style={{padding:'unset',margin:'unset',maxWidth:'100%'  ,display: 'flex',\n         alignItems: 'center',\n         justifyContent: 'center'}} >\n      <HeaderCell>код(fao.org)</HeaderCell>\n      <Cell dataKey=\"fishery_id\" onClick={(evt)=>{\n        console.log(evt.target);\n      }} />\n    </Column>\n\n    <Column  align={'center'} \n     style={{padding:'unset',margin:'unset',maxWidth:'100%'  ,display: 'flex',\n     alignItems: 'center',\n     justifyContent: 'center'}}\n    >\n      <HeaderCell>промысла</HeaderCell>\n      <Cell dataKey=\"fishery_name\"   />\n    </Column>\n\n    <Column align={'center'} \n         style={{padding:'unset',margin:'unset',maxWidth:'100%'  ,display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'}}>\n      <HeaderCell>запас</HeaderCell>\n      <Cell dataKey='exploiting_stocks' />\n    </Column>\n\n     <Column align={'center'} \n         style={{padding:'unset',margin:'unset' ,display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'}}>\n      <HeaderCell>maps</HeaderCell>\n      <Cell dataKey=\"map_info\"\n      >\n           {\n           (rowData, rowIndex) => \n            (<IconButton aria-label='add'\n            style={{position:'relative',display:'flex',alignItems: 'center',\n            justifyContent: 'center'}}\n            onClick={()=>{\n              switcher.status || (setFisheries(rowData))\n              dispatch({type: 'switch'})\n            }}>\n               {switcher.icon}\n             </IconButton>)\n          }\n      </Cell>\n    </Column>\n    \n  </Table>\n  </Dialog>\n  // </Rnd>\n  )\n};\nexport default DataTable;","import React, { useState } from \"react\";\nimport ReactTooltip from \"react-tooltip\";\nimport MapChart from \"./components/MapChart\";\nimport DataTable from './components/table'\nimport {\n    Link,\n    useRouteMatch,\n} from \"react-router-dom\";\nexport default Map;\nfunction Map(props) {\n    const [content, setContent] = useState({});\n    const [rows, setRows] = useState([]);\n    const [fisheries, setFisheries] = useState();\n    const [open, setOpen] = useState(false);\n    return (\n        <div>\n            <MapChart setTooltipContent={setContent} setRows={setRows} setOpen={setOpen} fisheries={fisheries}/>\n            { content === \"\" ||  <ReactTooltip place=\"bottom\" type=\"light\" effect=\"float\" style={{ display: 'inline',padding:'none',alignItems:'center'\n        ,justifyContent:'left'\n        }}>\n             <ul >\n                    <li><kbd>CONTINENT:</kbd>{content.CONTINENT}</li>\n                    <li><kbd>FORMAL_EN:</kbd>{content.FORMAL_EN}</li>\n                    <li><kbd> GDP_MD_EST:</kbd>{content.GDP_MD_EST}</li>\n                    <li><kbd>GDP_YEAR:</kbd>{content.GDP_YEAR}</li>\n                    <li><kbd>ISO_A2:</kbd>{content.ISO_A2}</li>\n                    <li><kbd>ISO_A3:</kbd>{content.ISO_A3}</li>\n                    <li><kbd>NAME:</kbd>{content.NAME}</li>\n                    <li><kbd>NAME_LONG:</kbd>{content.NAME_LONG}</li>\n                    <li><kbd>POP_EST:</kbd>{content.POP_EST}</li>\n                    <li><kbd>POP_RANK:</kbd>{content.POP_RANK}</li>\n                    <li><kbd>POP_YEAR:</kbd>{content.POP_YEAR}</li>\n                    <li><kbd>REGION_UN:</kbd>{content.REGION_UN}</li>\n                    <li> <kbd>SUBREGION:</kbd>{content.SUBREGION}</li>\n                </ul>\n            </ReactTooltip>}\n            <DataTable rows={rows} setFisheries={setFisheries} setOpen={setOpen} open={open}/>\n        </div>\n    );\n}\n\ndocument.oncontextmenu = function(e){\n//  var evt = new Object({keyCode:93});\n stopEvent(e);\n}\nfunction stopEvent(event){\n if(event.preventDefault != undefined)\n  event.preventDefault();\n if(event.stopPropagation != undefined)\n  event.stopPropagation();\n}\n","export default {\n    DbList:    (resource, params) => Promise,\n}\n","\n// in databases.js\nimport * as React from \"react\";\nimport { List, Datagrid, Edit, Create, SimpleForm, DateField, TextField, EditButton, TextInput, DateInput } from 'react-admin';\nimport BookIcon from '@material-ui/icons/Book';\nexport const PostIcon = BookIcon;\n\nexport const DbList = (props) => (\n    <List {...props}>\n        <Datagrid>\n            <TextField source=\"id\" />\n            <TextField source=\"title\" />\n            <DateField source=\"published_at\" />\n            <TextField source=\"average_note\" />\n            <TextField source=\"views\" />\n            <EditButton basePath=\"/posts\" />\n        </Datagrid>\n    </List>\n);\n\nconst PostTitle = ({ record }) => {\n    return <span>Post {record ? `\"${record.title}\"` : ''}</span>;\n};\n\nexport const PostEdit = (props) => (\n    <Edit title={<PostTitle />} {...props}>\n        <SimpleForm>\n            <TextInput disabled source=\"id\" />\n            <TextInput source=\"title\" />\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\n            <TextInput multiline source=\"body\" />\n            <DateInput label=\"Publication date\" source=\"published_at\" />\n            <TextInput source=\"average_note\" />\n            <TextInput disabled label=\"Nb views\" source=\"views\" />\n        </SimpleForm>\n    </Edit>\n);\n\nexport const PostCreate = (props) => (\n    <Create title=\"Create a Post\" {...props}>\n        <SimpleForm>\n            <TextInput source=\"title\" />\n            <TextInput source=\"teaser\" options={{ multiLine: true }} />\n            <TextInput multiline source=\"body\" />\n            <TextInput label=\"Publication date\" source=\"published_at\" />\n            <TextInput source=\"average_note\" />\n        </SimpleForm>\n    </Create>\n);","import { Admin, Resource } from 'react-admin';\nimport dataProvider from './dataprovider';\nimport { DbList } from './databases';\nimport React from 'react';\n// import simpleRestProvider from './ra-strapi-rest';\n\n\n// const dataProvider = simpleRestProvider('http://localhost:1337');\n\nconst DataMg = () => (\n    <Admin dataProvider={dataProvider}>\n        <Resource name=\"contries\" list={DbList} />\n    </Admin>\n);\n\nexport default DataMg;","import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport Map from \"./map\"\nimport DataMg from \"./DataMg\"\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\nimport {ThemeContext,themes} from './settings'\n\nfunction App() {\n  return (\n    <>\n    <Router>\n    <Switch>\n      {/* <Route path=\"/about\">\n        <About />\n      </Route> */}\n      <Route path=\"/datamg\">\n        <DataMg />\n      </Route>\n      <Route path=\"/\">\n      <ThemeContext.Provider value={themes.light}>\n        <Map/>\n       \n        </ThemeContext.Provider>\n      </Route>\n    </Switch>\n   </Router>\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}